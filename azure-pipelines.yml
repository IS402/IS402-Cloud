trigger:
  - main  # Trigger pipeline on changes to 'main' branch

variables:
  azureSubscription: '974ba5ab-9bc7-41c7-84ac-d53863572299'  # Azure Subscription ID
  webAppName: 'wumiibo'  # Azure Web App Name
  environmentName: 'wumiibo'  # Deployment environment
  serverPort: 8080  # Node.js server port
  nodeVersion: '18.x'  # Node.js version

stages:
- stage: Build
  displayName: "Build Application"
  jobs:
  - job: BuildJob
    displayName: "Build and Test"
    pool:
      name: Self-hosted  # Use self-hosted agent pool
      clean: true  # Clean workspace before running

    steps:
    # Step 1: Install Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    # Step 2: Cache npm packages
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(npm_config_cache)
      displayName: 'Cache npm packages'

    # Step 3: Install dependencies for backend
    - script: |
        cd backend
        npm install
      displayName: 'Install Backend Dependencies'

    # Step 4: Install dependencies for frontend
    - script: |
        cd frontend
        npm install
      displayName: 'Install Frontend Dependencies'

    # Step 5: Build frontend
    - script: |
        cd frontend
        npm run build
      displayName: 'Build Frontend'

    # Step 6: Package the application
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          function Create-Zip {
              param([string]$zipfilename, [string]$sourcedir)
              if (Test-Path $zipfilename) { Remove-Item $zipfilename }
              [System.IO.Compression.ZipFile]::CreateFromDirectory($sourcedir, $zipfilename)
          }
          Create-Zip "$(Build.ArtifactStagingDirectory)/mern-app.zip" "$(System.DefaultWorkingDirectory)"
      displayName: 'Package the application'

    # Step 7: Publish the artifact for deployment
    - publish: $(Build.ArtifactStagingDirectory)/mern-app.zip
      artifact: drop
      displayName: 'Publish Artifact'

- stage: Deploy
  displayName: "Deploy Application"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToAzure
    displayName: "Deploy MERN App to Azure Web App"
    environment: $(environmentName)
    pool:
      name: Self-hosted  # Use self-hosted agent pool

    strategy:
      runOnce:
        deploy:
          steps:
          # Step 1: Deploy the application to Azure Web App
          - task: AzureWebApp@1
            displayName: 'Deploy MERN App to Azure'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|18-lts'
              package: '$(Pipeline.Workspace)/drop/mern-app.zip'
              startUpCommand: 'node backend/server.js --port $(serverPort)'

          # Step 2: Restart Azure Web App
          - task: AzureCLI@2
            displayName: 'Restart Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az webapp restart --name $(webAppName) --resource-group 'Wumiibo'
