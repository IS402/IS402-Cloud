trigger:
  branches:
    include:
      - main  # Trigger the pipeline on changes to the main branch

variables:
  - name: azureSubscription
    value: AzureForStudents-Wumiibo-Connection
  - group: SECRET_KEY  # Reference your variable group containing MONGO_URI and other secrets
  - name: ACR_NAME
    value: wumiibo
  - name: FRONTEND_IMAGE
    value: is402-frontend
  - name: BACKEND_IMAGE
    value: is402-backend
  - name: APP_NAME_DEV
    value: wumiibo-dev  # Development Azure Web App
  - name: APP_NAME_PROD
    value: wumiibo       # Production Azure Web App
  - name: RESOURCE_GROUP
    value: Wumiibo       # Single resource group for both environments

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Images
  pool:
    name: "Self-hosted 1"  # Use your self-hosted agent pool
  jobs:
  - job: BuildAndPush
    displayName: Build and Push Docker Images to ACR
    steps:
    - task: PowerShell@2
      displayName: Login to Azure Container Registry
      inputs:
        targetType: 'inline'
        script: |
          az login --scope https://management.core.windows.net//.default
          az acr login --name $(ACR_NAME)
        pwsh: true

    - task: PowerShell@2
      displayName: Build and Push Frontend Image
      inputs:
        targetType: 'inline'
        script: |
          docker build -t $(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):$(Build.BuildId) -f frontend/Dockerfile .
          docker push $(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):$(Build.BuildId)
        pwsh: true

    - task: PowerShell@2
      displayName: Build and Push Backend Image
      inputs:
        targetType: 'inline'
        script: |
          docker build -t $(ACR_NAME).azurecr.io/$(BACKEND_IMAGE):$(Build.BuildId) -f backend/Dockerfile .
          docker push $(ACR_NAME).azurecr.io/$(BACKEND_IMAGE):$(Build.BuildId)
        pwsh: true

- stage: DeployDev
  displayName: Deploy to Development Environment
  pool:
    name: "Self-hosted 1"
  jobs:
  - job: DeployDev
    displayName: Deploy Containers to Development
    steps:
    - task: PowerShell@2
      displayName: Deploy Development Containers
      inputs:
        targetType: 'inline'
        script: |
          # Login to Azure Container Registry
          az acr login --name $(ACR_NAME)

          # Set environment variables
          $env:MONGO_URI = "$(MONGO_URI)"

          # Deploy containers using docker-compose
          docker-compose -f docker-compose.prod.yml up --build -d
        pwsh: true

- stage: DeployToKubernetes
  displayName: Deploy to Kubernetes
  pool:
    name: "Self-hosted 1"
  jobs:
  - job: DeployToAKS
    displayName: Deploy to Azure Kubernetes Service
    steps:
    - task: PowerShell@2
      displayName: Deploy to Kubernetes
      inputs:
        targetType: 'inline'
        script: |
          # Login to Azure 
          az login
          
          # Set Kubernetes context
          az aks get-credentials -n your-aks-cluster-name -g $(RESOURCE_GROUP)
          
          # Apply Kubernetes manifests
          kubectl apply -f k8s/deployment.yaml
          
          # Update image for frontend
          kubectl set image deployment/frontend-deployment frontend=$(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):$(Build.BuildId)
          
          # Update image for backend
          kubectl set image deployment/backend-deployment backend=$(ACR_NAME).azurecr.io/$(BACKEND_IMAGE):$(Build.BuildId)
        pwsh: true