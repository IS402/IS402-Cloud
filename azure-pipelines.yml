stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Images
  pool:
    name: Self-hosted 1
  jobs:
  - job: BuildAndPush
    displayName: Build and Push Docker Images to ACR
    steps:
    - task: PowerShell@2
      displayName: Login to Azure Container Registry
      inputs:
        targetType: 'inline'
        script: |
          az acr login --name $(ACR_NAME)

    - task: PowerShell@2
      displayName: Build and Push Frontend Image
      inputs:
        targetType: 'inline'
        script: |
          docker build -t $(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):latest -f frontend/Dockerfile.UI .
          docker push $(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):latest

    - task: PowerShell@2
      displayName: Build and Push Backend Image
      inputs:
        targetType: 'inline'
        script: |
          docker build -t $(ACR_NAME).azurecr.io/$(BACKEND_IMAGE):latest -f backend/Dockerfile .
          docker push $(ACR_NAME).azurecr.io/$(BACKEND_IMAGE):latest

    - task: PowerShell@2
      displayName: Push MongoDB Image
      inputs:
        targetType: 'inline'
        script: |
          docker pull mongo:latest
          docker tag mongo:latest $(ACR_NAME).azurecr.io/$(MONGO_IMAGE):latest
          docker push $(ACR_NAME).azurecr.io/$(MONGO_IMAGE):latest

- stage: Deploy
  displayName: Deploy to Azure Web App
  pool:
    name: Self-hosted
  jobs:
  - job: Deploy
    steps:
    - task: PowerShell@2
      displayName: Deploy to Azure Web App
      inputs:
        targetType: 'inline'
        script: |
          az webapp config container set --name $(APP_NAME) --resource-group $(RESOURCE_GROUP) --docker-custom-image-name $(ACR_NAME).azurecr.io/$(FRONTEND_IMAGE):latest