trigger:
  - main  # Trigger the pipeline on changes to the 'main' branch

variables:
  azureSubscription: '974ba5ab-9bc7-41c9-84ac-d53863572299'
  webAppName: 'wumiibo'
  environmentName: 'wumiibo'
  selfHostedPoolName: 'Self-hosted'
  serverPort: 8080

stages:
- stage: Build
  displayName: "Build Stage"
  jobs:
  - job: Build
    displayName: "Build and Test"
    pool:
      name: $(selfHostedPoolName)

    steps:
    # Install Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    # Navigate to backend folder and install dependencies
    - script: |
        cd backend
        npm install --production  # Install only production dependencies
        npm run build --if-present  # Build if build script exists
      displayName: 'Install dependencies and build'

    # Archive the backend folder, including node_modules
    - task: ArchiveFiles@2
      displayName: 'Archive Backend Artifacts'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/backend'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    # Publish the artifact for the next stage
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
      displayName: 'Publish Backend Artifacts'

- stage: Deploy
  displayName: "Deploy Stage"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: "Deploy to Azure"
    environment: $(environmentName)
    pool:
      name: $(selfHostedPoolName)

    strategy:
      runOnce:
        deploy:
          steps:
          # Deploy the app to Azure Web App
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App: $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|20LTS'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              startUpCommand: 'cd backend && node server.js --port $(serverPort)'
